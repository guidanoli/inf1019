
  N.R.U. - Not Recently Used

  A P.T.E. (Page table entry) is formatted for this algorithm as follows:

  0b0 - R flag - The page has been referenced (r/w) after the last interrupt
  0b1 - M flag - The page has been modified (w) since added to memory
  0b2 - P flag - The page is present in memory

  Thus, only 1 byte is necessary for this algorithm.

  The minimum page size is 8 KB, and the addresses have 32 bits, so there
  are 19 bits left for page frame number, that is, 2^19 entries, 0.5 MB!

  When an access is requested, the following will be done:

  * Virtual memory frame number is calculated through the address and page size
  * The P.T.E. is accessed
  * If present in memory, it's a page hit!
  * If not present, cause a page fault!
  * If the action is W, make the M flag 1!
  * Make the R flag 1!
  * Chooses one page randomly from the lowest non-empty class.
  * If page has been modified, write it to memory.
  * Zero the victim P.T.E. and make the current P.T.E. present with R/M flags.
